@model SecurityLoggingDemo.Models.User

@{
    ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"]</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var modelState in ViewData.ModelState.Values)
            {
                foreach (var error in modelState.Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            }
        </ul>
    </div>
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Register" method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PasswordHash" class="control-label">Password</label>
                <input type="password" name="Password" id="Password" class="form-control" required />
                <span asp-validation-for="PasswordHash" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Register" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <p>Already have an account? <a asp-action="Login">Login here</a></p>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
document.addEventListener('DOMContentLoaded', function() {
    var form = document.querySelector('form');
    console.log('Form HTML:', form.innerHTML);

    form.addEventListener('submit', function(e) {
        e.preventDefault();
        var formData = new FormData(this);
        console.log('Form data:');
        for (var pair of formData.entries()) {
            console.log(pair[0] + ': ' + pair[1]);
        }
        this.submit();
    });
});
</script>